generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid()) @db.Uuid
  email    String  @unique
  name     String?
  password String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  bankAccounts BankAccount[]
  transactions Transaction[]
  categories   Category[]

  @@map("users")
}

enum BankAccountType {
  CHECKING
  INVESTMENT
  CASH

  @@map("bank_account_type")
}

model BankAccount {
  id             String          @id @default(uuid()) @db.Uuid
  userId         String          @map("user_id") @db.Uuid
  initialBalance Float           @map("initial_balance")
  type           BankAccountType
  color          String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  transactions Transaction[]

  @@map("bank_accounts")
}

enum TransactionCategoryType {
  INCOME
  OUTCOME

  @@map("transaction_category_type")
}

model Category {
  id     String                  @id @default(uuid()) @db.Uuid
  userId String                  @map("user_id") @db.Uuid
  name   String
  icon   String
  type   TransactionCategoryType

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  transactions Transaction[]

  @@map("categories")
}

model Transaction {
  id            String                  @id @default(uuid()) @db.Uuid
  userId        String                  @map("user_id") @db.Uuid
  categoryId    String?                 @map("category_id") @db.Uuid
  bankAccountId String                  @map("bank_account_id") @db.Uuid
  amount        Float
  name          String
  description   String?
  date          DateTime
  type          TransactionCategoryType

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category?   @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  bankAccount BankAccount @relation(fields: [bankAccountId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("transactions")
}
